/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.martin.cloudClient.gui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import org.martin.cloudClient.gui.model.RenderListDirs;
import org.martin.cloudClient.model.LMDirectories;
import org.martin.cloudClient.model.PBModel;
import org.martin.cloudClient.net.Connector;
import org.martin.cloudCommon.model.packages.ClientPackage;
import org.martin.cloudCommon.model.packages.TransferPackage;
import org.martin.cloudCommon.model.packages.UserPackage;
import org.martin.cloudCommon.system.Archive;
import org.martin.cloudCommon.system.Command;
import org.martin.cloudCommon.system.SysInfo;

/**
 *
 * @author martin
 */
public class GUICloudClient extends javax.swing.JFrame {

    private static final byte ENTER_KEY = KeyEvent.VK_ENTER;
    private Connector connector;
    private Socket socket;
    private ClientPackage cliPackage;
    private static GUICloudClient gui;
    //private final ImageIcon fileImg;
    private JFileChooser fileChoos;

    private static final byte optionSi = JOptionPane.YES_OPTION;
    
    public static void newInstance(){
        gui = new GUICloudClient();
        gui.setVisible(true);
    }
    
    public static GUICloudClient getInstance(){
        return gui;
    }
    
    public GUICloudClient() {
        /*this.fileImg = new ImageIcon(
                getClass()
                        .getResource("/org/martin/cloudClient/gui/icons/file 48x48"));
        */
        initComponents();
        fileChoos = new JFileChooser();
        fileChoos.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChoos.setMultiSelectionEnabled(true);
        fileChoos.addChoosableFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                return true;
            }

            @Override
            public String getDescription() {
                return "Solo archivos";
            }
        });
        setLocationRelativeTo(null);
        setResizable(false);
        formClientManagement.setDefaultCloseOperation(EXIT_ON_CLOSE);
        formClientRegister.setSize(formClientRegister.getPreferredSize());
        formClientRegister.setResizable(false);
        dialogNewFolder.setSize(380, 100);
        dialogNewFolder.setResizable(false);
        dialogNewFolder.setAlwaysOnTop(true);
        spaceBar.setString(spaceBar.getValue() + "MB");
        spaceBar.setStringPainted(true);
        // Investigar SwingWorker --> permite la ejecucion de procesos que requieren
        // tiempo mediante un proceso en segundo plano para que la gui no se cuelgue
    }

    public ClientPackage getCliPackage() {
        return cliPackage;
    }
    
    private void openWindow(Window window, Component objectiveLocation){
        window.setLocationRelativeTo(objectiveLocation);
        window.show();
    }
    
    public void openWindow(Window window, Component objectiveLocation, int width, 
            int height){
        window.setSize(width, height);
        window.setLocationRelativeTo(null);
        window.show();
    }

    public void openWindow(Window window, Component objetiveLocation, Dimension dimension){
        window.setSize(dimension);
        window.setLocationRelativeTo(objetiveLocation);
        window.show();
    }
    
    private void closeSession() {
        try {
            connector.sendCommand(Command.close);
            connector.closeConnection();
            connector = null;
            formClientManagement.setVisible(false);
            setVisible(true);
            txtNick.requestFocus();
            JOptionPane.showMessageDialog(this, "Sesi√≥n cerrada exitosamente");
        } catch (IOException ex) {
            Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private File getSelectedDir(){
        return new File(cliPackage.getCurrentDir(), listDirectories.getSelectedValue());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formClientManagement = new javax.swing.JFrame();
        panelInfo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        spaceBar = new javax.swing.JProgressBar();
        lblUserName = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        panelContent = new javax.swing.JPanel();
        panelDirectories = new javax.swing.JPanel();
        listFIles = new javax.swing.JScrollPane();
        listDirectories = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelFiles = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panelIcons = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnUpdateDirectory = new javax.swing.JButton();
        btnUploadFile = new javax.swing.JButton();
        btnAddFolder = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        cboOrderOption = new javax.swing.JComboBox<>();
        cboOrderType = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnOrderFiles = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        formClientRegister = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtRegNick = new javax.swing.JTextField();
        txtRegPass1 = new javax.swing.JPasswordField();
        txtRegPass2 = new javax.swing.JPasswordField();
        btnRegUser = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dialogNewFolder = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtNewFolderName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNick = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        formClientManagement.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formClientManagementWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formClientManagementWindowClosing(evt);
            }
        });

        panelInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 153), null));

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel6.setText("Nombre de Usuario: ");

        jLabel7.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel7.setText("Tipo de Cuenta: ");

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel8.setText("Espacio Utilizado: ");

        lblUserName.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        lblUserName.setText(" ");

        jLabel17.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel17.setText(" ");

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spaceBar, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(lblUserName)))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spaceBar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel17))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        panelDirectories.setBackground(java.awt.Color.white);
        panelDirectories.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 255, 51), null), "Directorios"));
        panelDirectories.setLayout(new java.awt.BorderLayout());

        listDirectories.setBackground(new java.awt.Color(153, 255, 153));
        listDirectories.setModel(new DefaultListModel<String>()
        );
        listDirectories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listDirectoriesMouseReleased(evt);
            }
        });
        listFIles.setViewportView(listDirectories);

        panelDirectories.add(listFIles, java.awt.BorderLayout.CENTER);

        panelFiles.setBackground(new java.awt.Color(204, 255, 204));
        panelFiles.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 102), null), "Archivos"));
        panelFiles.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        panelFiles.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(panelFiles);

        javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
        panelContent.setLayout(panelContentLayout);
        panelContentLayout.setHorizontalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDirectories, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelContentLayout.setVerticalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(panelDirectories, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnBack.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/goBack.png"))); // NOI18N
        btnBack.setToolTipText("Volver Atras");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/home.png"))); // NOI18N
        btnHome.setToolTipText("Volver a raiz");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnUpdateDirectory.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnUpdateDirectory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/update.png"))); // NOI18N
        btnUpdateDirectory.setToolTipText("Actualizar");
        btnUpdateDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDirectoryActionPerformed(evt);
            }
        });

        btnUploadFile.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnUploadFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/upload.png"))); // NOI18N
        btnUploadFile.setToolTipText("Subir");
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        btnAddFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/newFolder.png"))); // NOI18N
        btnAddFolder.setToolTipText("Nueva Carpeta");
        btnAddFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFolderActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/search2.png"))); // NOI18N
        btnSearch.setToolTipText("Buscar archivos y/o directorios");
        btnSearch.setEnabled(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cboOrderOption.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        cboOrderOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Tama√±o", "Fecha", "Tipo", "Formato" }));
        cboOrderOption.setEnabled(false);

        cboOrderType.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        cboOrderType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
        cboOrderType.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel14.setText("Orden: ");
        jLabel14.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel13.setText("Ordenar elementos por: ");
        jLabel13.setEnabled(false);

        btnOrderFiles.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        btnOrderFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/orderFiles.png"))); // NOI18N
        btnOrderFiles.setToolTipText("Ordenar");
        btnOrderFiles.setEnabled(false);
        btnOrderFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderFilesActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/exit.png"))); // NOI18N
        jButton4.setToolTipText("Cerrar Sesion");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelIconsLayout = new javax.swing.GroupLayout(panelIcons);
        panelIcons.setLayout(panelIconsLayout);
        panelIconsLayout.setHorizontalGroup(
            panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIconsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIconsLayout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelIconsLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboOrderOption, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboOrderType, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnOrderFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelIconsLayout.setVerticalGroup(
            panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIconsLayout.createSequentialGroup()
                .addGroup(panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelIconsLayout.createSequentialGroup()
                        .addGroup(panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnUploadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdateDirectory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearch))
                            .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelIconsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cboOrderOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(cboOrderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnOrderFiles))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("Informaci√≥n del Usuario");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        formClientManagement.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout formClientManagementLayout = new javax.swing.GroupLayout(formClientManagement.getContentPane());
        formClientManagement.getContentPane().setLayout(formClientManagementLayout);
        formClientManagementLayout.setHorizontalGroup(
            formClientManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formClientManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formClientManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formClientManagementLayout.createSequentialGroup()
                        .addGroup(formClientManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelIcons, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        formClientManagementLayout.setVerticalGroup(
            formClientManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formClientManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(panelIcons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 102, 255), new java.awt.Color(153, 255, 153)));

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel10.setText("Nick: ");

        jLabel11.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel11.setText("Contrase√±a: ");

        jLabel12.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel12.setText("Repita la contrase√±a: ");

        txtRegPass1.setText("jPasswordField1");

        txtRegPass2.setText("jPasswordField1");

        btnRegUser.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        btnRegUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/registerUser1 32x32.png"))); // NOI18N
        btnRegUser.setText("Registrarse");
        btnRegUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRegUser, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(txtRegNick)
                    .addComponent(txtRegPass1)
                    .addComponent(txtRegPass2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtRegNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtRegPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtRegPass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Registro de Usuarios");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/cloud2 128x128.png"))); // NOI18N
        jLabel15.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 255, 153), null));

        javax.swing.GroupLayout formClientRegisterLayout = new javax.swing.GroupLayout(formClientRegister.getContentPane());
        formClientRegister.getContentPane().setLayout(formClientRegisterLayout);
        formClientRegisterLayout.setHorizontalGroup(
            formClientRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formClientRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formClientRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formClientRegisterLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        formClientRegisterLayout.setVerticalGroup(
            formClientRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formClientRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(formClientRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        dialogNewFolder.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                dialogNewFolderWindowOpened(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel16.setText("Nombre de la carpeta: ");

        txtNewFolderName.setToolTipText("Escriba el nombre de la nueva carpeta, al finalizar solo pulse ENTER.");
        txtNewFolderName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewFolderNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNewFolderName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtNewFolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        dialogNewFolder.getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 255, 102), null));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/martin/cloudClient/gui/icons/cloudClient.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel3.setText("Usuario: ");

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel4.setText("Contrase√±a: ");

        txtNick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNickKeyReleased(evt);
            }
        });

        txtPassword.setText("jPasswordField1");
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        btnLogin.setText("Ingresar");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel5.setText("¬øNo tienes cuenta?");

        jButton2.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jButton2.setText("Reg√≠strate aqu√≠");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword)
                                    .addComponent(txtNick))
                                .addGap(29, 29, 29))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLogin)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 66, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bienvenido a ElectroCloud");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        try {
            // Para el @back el addOption funciona bien pero se debe revisar para
            // otras operaciones
            Command cmd = new Command("@back");
            cmd.addOption(cliPackage.getCurrentDir().getCanonicalPath());
            connector.sendCommand(cmd);
            Object objReceived = connector.getReceivedObject();
            cliPackage.setCurrentDir((File) objReceived);
            updateAll();
            System.out.println("Carpeta raiz despues de @back: "+cliPackage.getCurrentDir());
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        try {
            Command cmd = new Command("@root");
            connector.sendCommand(cmd);
            Object objReceived = connector.getReceivedObject();
            cliPackage.setCurrentDir((File) objReceived);
            updateAll();
            System.out.println("Carpeta raiz despues de @root: "+cliPackage.getCurrentDir());
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnUpdateDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDirectoryActionPerformed
        try {
            connector.sendCommand(new Command("@access", 
                    cliPackage.getCurrentDir().getCanonicalPath()));
            
            cliPackage.setCurrentDir((File) connector.getReceivedObject());
            updateAll();
        } catch (IOException ex) {
            Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateDirectoryActionPerformed

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        fileChoos.showOpenDialog(formClientManagement);
        final File[] selectedFiles = fileChoos.getSelectedFiles();
        
        if (selectedFiles != null) {
            try {
                String localPath, remotePath;
                Command cmd;
                Archive archive;
                Object objReceived;
                
                for (File selectedFile : selectedFiles) {
                    localPath = selectedFile.getCanonicalPath();
                    remotePath = cliPackage.getCurrentDir().getCanonicalPath();
                
                    cmd = Command.uplF;
                    archive = new Archive(remotePath, selectedFile.getName());
                    cmd.addOption(localPath);
                    cmd.addOption(remotePath);
                    archive.writeBytesFrom(selectedFile);
                
                    connector.sendTransferPackage(new TransferPackage(cmd, archive));
                    connector.sendCommand(new Command("@access",
                            cliPackage.getCurrentDir().getCanonicalPath()));
                
                    objReceived = connector.getReceivedObject();
                    cliPackage.setCurrentDir((File) objReceived);
                    updateAll();
                }
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnUploadFileActionPerformed
    private void btnAddFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFolderActionPerformed
        dialogNewFolder.setLocationRelativeTo(formClientManagement);
        dialogNewFolder.setVisible(true);
    }//GEN-LAST:event_btnAddFolderActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnOrderFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderFilesActionPerformed
    }//GEN-LAST:event_btnOrderFilesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int option = JOptionPane.showConfirmDialog(formClientManagement, 
                "¬øEsta seguro que desea cerrar sesi√≥n?", "Confirmaci√≥n", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (option == optionSi) closeSession();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnRegUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegUserActionPerformed
        final String user = txtRegNick.getText();
        final String pass1 = txtRegPass1.getText();
        final String pass2 = txtRegPass2.getText();
        
        if (user.isEmpty() || pass1.isEmpty() || pass2.isEmpty()) {
            JOptionPane.showMessageDialog(formClientRegister, "Por favor rellene todos los campos");
            txtRegNick.selectAll();
            txtRegNick.requestFocus();
        }
        else if (!pass1.equals(pass2)) {
            JOptionPane.showMessageDialog(formClientRegister, "Las contrase√±as no coinciden");
            txtRegPass1.selectAll();
            txtRegPass1.requestFocus();
        }
        else{
            try {
                // Esto se debe cambiar
                socket = new Socket(SysInfo.LOCALHOST, SysInfo.DEFAULT_PORT);
                connector = new Connector(socket);
                connector.sendCommand(Command.newRegU(user, pass1));
                final Object objReceived = connector.getReceivedObject();
                if (objReceived instanceof Boolean)
                    if ((Boolean)objReceived){
                        JOptionPane.showMessageDialog(formClientRegister, "Usuario registrado exitosamente",
                                "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        txtRegNick.setText(null);
                        txtRegPass1.setText(null);
                        txtRegPass2.setText(null);
                        formClientRegister.setVisible(false);
                        
                        txtNick.setText(user);
                        txtPassword.setText(pass1);
                        txtNick.selectAll();
                        txtNick.requestFocus();
                    }
                    else{
                        JOptionPane.showMessageDialog(formClientRegister, 
                                "El nick no se encuentra disponible",
                                "Mensaje", JOptionPane.WARNING_MESSAGE);
                        txtRegNick.selectAll();
                        txtRegNick.requestFocus();
                    }
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRegUserActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        openWindow(formClientRegister, this);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        final String nick = txtNick.getText();
        final String passw = txtPassword.getText();
        
        if (nick.isEmpty() || passw.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos");
            txtNick.selectAll();
            txtNick.requestFocus();
        }
        else{
            try {
                final Socket sock = new Socket(SysInfo.LOCALHOST, SysInfo.DEFAULT_PORT);
                final UserPackage up;
                connector = new Connector(sock);
                connector.sendCommand(Command.newLoginU(nick, passw));
                up = (UserPackage) connector.getReceivedObject();
                if (!up.hasClientPackage()) {
                    JOptionPane.showMessageDialog(this, "Usuario y/o contrase√±a incorrectos");
                    txtNick.selectAll();
                    txtNick.requestFocus();
                    connector.closeConnection();
                }   
                else{
                    connector.reinstanceStreams();
                    txtNick.setText(null);
                    txtPassword.setText(null);
                    cliPackage = up.getCliPackage();
                    try {
                        System.out.println(cliPackage.getCurrentDir().getCanonicalPath());
                        System.out.println(Arrays.toString(cliPackage.getCurrentDir().listFiles()));
                    } catch (IOException ex) {
                        Logger.getLogger(ClientPackage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(this, "¬°Bienvenido "
                            +cliPackage.getUserNick()+"!");
                    setVisible(false);
                    openWindow(formClientManagement, this, formClientManagement.getPreferredSize());
                }
                
            } catch (IOException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "No se ha podido establecer la conexi√≥n\n"
                        + "con el servidor", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtNickKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNickKeyReleased
        if (evt.getKeyCode() == ENTER_KEY) {
            txtPassword.selectAll();
            txtPassword.requestFocus();
        }
        
    }//GEN-LAST:event_txtNickKeyReleased

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        if (evt.getKeyCode() == ENTER_KEY)
            btnLogin.doClick();
    }//GEN-LAST:event_txtPasswordKeyReleased

    private void formClientManagementWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formClientManagementWindowOpened
        spaceBar.setModel(new PBModel(cliPackage.getAccount()));
        lblUserName.setText(cliPackage.getUserNick());
        updateList(cliPackage.getCurrentDir());
        updatePanel();
        
    }//GEN-LAST:event_formClientManagementWindowOpened

    private void listDirectoriesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDirectoriesMouseReleased
        if (evt.getClickCount() == 2) {
            File dir = getSelectedDir();
            
            if (dir != null) {
                try {
                    Command access = new Command("@access", dir.getCanonicalPath());
                    connector.sendObject(access);
                    cliPackage.setCurrentDir((File) connector.getReceivedObject());
                    updateAll();
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
    }//GEN-LAST:event_listDirectoriesMouseReleased

    private void formClientManagementWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formClientManagementWindowClosing
        closeSession();
    }//GEN-LAST:event_formClientManagementWindowClosing

    private void dialogNewFolderWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dialogNewFolderWindowOpened
        setLocationRelativeTo(formClientManagement);
    }//GEN-LAST:event_dialogNewFolderWindowOpened

    private void txtNewFolderNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewFolderNameKeyReleased
        if (evt.getKeyCode() == ENTER_KEY) {
            String fldName = txtNewFolderName.getText().trim();
            if (!fldName.isEmpty()) try {
                    connector.sendCommand(new Command("@mkd", fldName, cliPackage.getCurrentDir().getCanonicalPath()));
                    connector.sendCommand(new Command("@access", cliPackage.getCurrentDir().getCanonicalPath()));
                    
                    Object obj = connector.getReceivedObject();
                    cliPackage.setCurrentDir((File) obj);
                    updateAll();
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(GUICloudClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            txtNewFolderName.setText(null);
            dialogNewFolder.setVisible(false);
        }
    }//GEN-LAST:event_txtNewFolderNameKeyReleased

    public void updateList(File directory){
        listDirectories.setModel(new LMDirectories(directory));
        listDirectories.setCellRenderer(new RenderListDirs());
        listDirectories.updateUI();
    }
    
    public void updateList(){
        updateList(cliPackage.getCurrentDir());
    }
    
    public void updatePanel(){
        //Grapher.graphFiles(cliPackage.getOnlyFiles(), panelFiles, connector);
        Grapher.getGrapher().graphFiles(cliPackage.getOnlyFiles(), panelFiles);
    }

    public void updateAll(){
        updateList();
        updatePanel();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUICloudClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUICloudClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUICloudClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUICloudClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            GUICloudClient.newInstance();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFolder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnOrderFiles;
    private javax.swing.JButton btnRegUser;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateDirectory;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JComboBox<String> cboOrderOption;
    private javax.swing.JComboBox<String> cboOrderType;
    private javax.swing.JDialog dialogNewFolder;
    private javax.swing.JFrame formClientManagement;
    private javax.swing.JFrame formClientRegister;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JList<String> listDirectories;
    private javax.swing.JScrollPane listFIles;
    private javax.swing.JPanel panelContent;
    private javax.swing.JPanel panelDirectories;
    private javax.swing.JPanel panelFiles;
    private javax.swing.JPanel panelIcons;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JProgressBar spaceBar;
    private javax.swing.JTextField txtNewFolderName;
    private javax.swing.JTextField txtNick;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtRegNick;
    private javax.swing.JPasswordField txtRegPass1;
    private javax.swing.JPasswordField txtRegPass2;
    // End of variables declaration//GEN-END:variables
}
